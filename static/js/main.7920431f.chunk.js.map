{"version":3,"sources":["components/header/HeaderButton.tsx","components/header/Header.tsx","components/menu/Menu.tsx","constants/Constants.ts","components/calendarItem/CalendarItemModal.tsx","utils/getBlankVerse.tsx","components/calendarItem/CalendarItemCard.tsx","components/calendarItem/CalendarItemCardPlaceholder.tsx","components/calendar/CalendarHeader.tsx","components/calendar/CalendarButtonText.tsx","components/calendar/CalendarButton.tsx","components/calendar/CalendarPanel.tsx","pages/ReactBlog.tsx","utils/getNumArray.ts","components/calendar/CalendarHeaderButton.tsx","components/calendar/CalendarLayout.tsx","pages/AdventCalendar.tsx","pages/About.tsx","pages/Outline.tsx","res/img/img_advent_lg.png","res/img/img_advent_2.png","res/img/img_advent_3.png","Licenses.tsx","components/navigation/NavRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderButton","props","Button","variant","onClick","handleShowMenu","className","Header","Row","Col","Menu","Offcanvas","show","showMenu","onHide","handleHideMenu","placement","closeButton","Title","Body","to","GITHUB_URL","CalendarItemModal","useState","item","setItem","verseArray","setVerseArray","useEffect","verse","indices","strArray","map","e","push","strSplit","split","join","formatVerse","formatVerseArray","m","c","Modal","size","aria-labelledby","centered","id","undefined","Footer","CalendarItemCard","modalShow","setModalShow","Card","sm","md","d","v","toString","icon","faBookReader","color","xs","Text","Accordion","flush","l","Item","eventKey","i","q","a","p","CalendarItemCardPlaceHolder","error","Spinner","animation","CalendarHeader","icons","faTree","faBell","faGifts","faChurch","faHeadphones","faSkiing","faMusic","faGlassCheers","faPlaneDeparture","faGem","faSleigh","faSnowman","faSnowflake","faHollyBerry","faSkating","faMugHot","faCandyCane","faCookieBite","faBirthdayCake","faAnchor","faHeart","faHome","faSocks","faMitten","faStar","CalendarButtonText","parseInt","text","CalendarButton","date","Date","getMonth","getDate","handleNumberClick","Size","CalendarPanel","treeArray","setTreeArray","rows","tree","getCols","j","k","getTreeArray","CalendarHeaderButton","handleOpenCalendar","openCalendar","aria-controls","aria-expanded","faGripLines","CalendarLayout","classname","Collapse","in","AdventCalendar","calendarItem","setCalendarItem","setOpenCalendar","calendarItemRef","useRef","hasError","setHasError","fetchData","itemNum","fetch","then","response","ok","json","status","Promise","reject","data","Object","keys","catch","err","console","num","current","scrollIntoView","Container","ref","lg","About","Outline","outline","setOutline","t","s","Table","r","b","ReactBlog","showModal","setShowModal","setSize","img","setImg","handleShow","handleClose","Image","src","screen_lg","width","thumbnail","XL","screen_md","SM","screen_sm","Licenses","licenses","require","ver","at","href","target","rel","version","match","library","replace","ListGroup","action","repository","licenseUrl","NavRouter","exact","path","App","currentYear","getFullYear","setShowMenu","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7920431f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport HeaderProps from \"./HeaderProps\";\nimport \"./Header.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that returns the header menu button.\n * @param props {HeaderProps}\n * @returns {Button} The header menu button\n * @component\n */\nconst HeaderButton = (props: HeaderProps): JSX.Element => (\n  <Button variant=\"header\" onClick={props.handleShowMenu}>\n    <span className=\"header-text\">Warm Hearts Ministries ❦</span>\n  </Button>\n);\n\nexport default HeaderButton;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport HeaderProps from \"./HeaderProps\";\nimport \"./Header.scss\";\nimport HeaderButton from \"./HeaderButton\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that renders the main page header.\n * Contains {@link HeaderButton}.\n * @component\n * @param props {HeaderProps}\n * @returns {Row} The page header\n */\nconst Header = (props: HeaderProps): JSX.Element => (\n  <Row className=\"align-content-end header-container\">\n    <Col>\n      <HeaderButton handleShowMenu={props.handleShowMenu} />\n    </Col>\n  </Row>\n);\n\nexport default Header;\n","import { Offcanvas, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport \"./Menu.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description Props interface for {@link Menu}\n * @interface\n */\ninterface MenuProps {\n  /**\n   * Value passed to Offcanvas show property.\n   * Shows the Offcanvas when set to true.\n   */\n  showMenu: boolean;\n  /**\n   * Function callback for the Offcanvas\n   * onHide property. Hides the menu.\n   */\n  handleHideMenu: () => void;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The page navigation menu. Renders\n * an Offcanvas element. Contains\n * route paths to the Advent Calendar page, About page,\n * Outline page, and React Blog page.\n * @param props {MenuProps}\n * @returns {Offcanvas} The navigation menu.\n * @component\n */\nconst Menu = (props: MenuProps): JSX.Element => (\n  <Offcanvas\n    show={props.showMenu}\n    onHide={props.handleHideMenu}\n    placement=\"start\"\n  >\n    <Offcanvas.Header closeButton>\n      <Offcanvas.Title>Warm Hearts Ministries ❦</Offcanvas.Title>\n    </Offcanvas.Header>\n    <Offcanvas.Body>\n      <Row className=\"py-2\">\n        <h6>Blog</h6>\n      </Row>\n      <Row className=\"px-2\">\n        <Link to=\"/React\" onClick={props.handleHideMenu} className=\"link-menu\">\n          Creating A React JS App\n        </Link>\n      </Row>\n      <Row className=\"py-2\">\n        <h6>App Project</h6>\n      </Row>\n      <Row className=\"px-2\">\n        <Link to=\"/\" onClick={props.handleHideMenu} className=\"link-menu\">\n          Advent Calendar\n        </Link>\n      </Row>\n      <Row className=\"px-2\">\n        <Link to=\"/about\" onClick={props.handleHideMenu} className=\"link-menu\">\n          About\n        </Link>\n      </Row>\n      <Row className=\"px-2\">\n        <Link\n          to=\"/outline\"\n          onClick={props.handleHideMenu}\n          className=\"link-menu\"\n        >\n          Outline\n        </Link>\n      </Row>\n      <hr />\n      <Row className=\"py-2\">\n        <h6>About Us</h6>\n      </Row>\n      <p className=\"px-2\">\n        Read blogs about our programming pursuits and discoveries, or enjoy some\n        of the apps that we create as proofs of concept while learning software\n        technologies.\n      </p>\n      <p className=\"px-2\">\n        Through our blogs, we hope to be an encouragement those who also like to\n        learn and explore software programming.\n      </p>\n      <p className=\"px-2\">\n        Through our software apps, we hope to pass on to others the blessings\n        that we enjoy in Christ, just as God gave us people who gave us a Bible\n        and led us to the love and mercy of the cross.\n      </p>\n      <p className=\"px-2\">\n        Jesus is the way, the truth, and the life. To God be the glory forever.\n      </p>\n    </Offcanvas.Body>\n  </Offcanvas>\n);\n\nexport default Menu;\n","export const GITHUB_URL = \"https://warmheartsministries.github.io/whmdata/\";\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Modal, Row } from \"react-bootstrap\";\nimport { formatVerseArray } from \"../../utils/getBlankVerse\";\nimport \"./CalendarItemCard.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The props interface for {@link CalendarItemModal}\n * @interface\n */\ninterface CalendarItemModalProps {\n  /**\n   * The memory verse\n   */\n  m: string;\n  /**\n   * The indices of blank words for the memory verse challenge\n   */\n  c: number[][];\n  /**\n   * Toggle for showing the modal container\n   */\n  show: boolean;\n  /**\n   * Hides the modal container\n   */\n  onHide: () => void;\n}\n\n/**\n * @description A component that renders a modal that shows\n * the memory verse challenge questions.\n * @param props {CalendarItemModalProps}\n * @returns {Modal} The container for the memory verse challenge questions\n * @component\n */\nconst CalendarItemModal = (props: CalendarItemModalProps) => {\n  const [item, setItem] = useState(0);\n  const [verseArray, setVerseArray] = useState<string[]>();\n  useEffect(() => {\n    setVerseArray(formatVerseArray(props.m, props.c));\n    return () => {\n      setItem(0);\n      setVerseArray([]);\n    };\n  }, [props.m, props.c]);\n  const handleNext = () => {\n    setItem(item + 1);\n  };\n  const startOver = () => {\n    setItem(0);\n  };\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Memory Verse Challenge\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {verseArray ? (\n          verseArray[item] ? (\n            <Row className=\"align-items-center my-2 mx-5\">\n              <p className=\"text-center\">{verseArray[item]}</p>\n            </Row>\n          ) : (\n            <Row className=\"align-items-center my-2\">\n              <p className=\"text-center\">End of the challenge.</p>\n            </Row>\n          )\n        ) : undefined}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"golden\" onClick={handleNext}>\n          <span className=\"challenge-text\">Next</span>\n        </Button>\n        <Button variant=\"golden\" onClick={startOver}>\n          <span className=\"challenge-text\">Start Over</span>\n        </Button>\n        <Button variant=\"golden\" onClick={props.onHide}>\n          <span className=\"challenge-text\">Close</span>\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CalendarItemModal;\n","function formatVerse(verse:string, indices:number[]): string {\r\n    let strSplit = verse.split(' ');\r\n    indices.map(e => {\r\n        return strSplit[e] = '__________';\r\n    });\r\n    return strSplit.join(' ');\r\n}\r\n\r\nexport function formatVerseArray(verse:string, indices:number[][]): string[] {\r\n    let strArray:string[] = [];\r\n    indices.map(e => {\r\n        return strArray.push(formatVerse(verse, e));\r\n    })\r\n    return strArray;\r\n}\r\n","import * as React from \"react\";\nimport \"./CalendarItemCard.scss\";\nimport { Card, Accordion, Row, Col, Button } from \"react-bootstrap\";\nimport { Quiz } from \"../../interfaces/Interfaces\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBookReader } from \"@fortawesome/free-solid-svg-icons\";\nimport { useState } from \"react\";\nimport CalendarItemModal from \"./CalendarItemModal\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The interface props for {@link CalendarItemCard}\n * @interface\n */\ninterface ItemCardData {\n  /**\n   * The key for the reading item\n   */\n  id: string;\n  /**\n   * The calendar day\n   */\n  d: number;\n  /**\n   * The daily Bible reading\n   */\n  v: string;\n  /**\n   * The memory verse\n   */\n  m: string;\n  /**\n   * The indices of blank words for the memory verse challenge\n   */\n  c: number[][];\n  /**\n   * The questions and answers for the group discussion\n   */\n  l: Quiz[];\n  /**\n   * The closing prayer\n   */\n  p: string;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that renders the calendar details card.\n * It shows the selected calendar day, the Bible reading, the\n * memory verse, the questions and answers for the group discussion,\n * and the memory verse challenge. The memory verse challenge\n * is rendered by the {@link CalendarItemModal}\n * @returns {Card} The calendar details container\n * @param props {ItemCardData}\n * @component\n */\nconst CalendarItemCard = (props: ItemCardData): JSX.Element => {\n  const [modalShow, setModalShow] = useState(false);\n  return (\n    <Card className=\"shadow-sm\" id={props.id}>\n      <Card.Header className=\"CardHeaderBig\">\n        <Row className=\"text-center align-items-center align-content-center\">\n          <Col\n            sm={6}\n            md={4}\n            className=\"text-center align-items-center align-content-center\"\n          >\n            <h3 className=\"calendar-date\">{props.d}</h3>\n            <h5 className=\"calendar-date\">DECEMBER</h5>\n          </Col>\n          <Col\n            sm={6}\n            md={8}\n            className=\"text-center align-items-center align-content-center\"\n          >\n            {props.v.split(\"&\").map((e) => (\n              <h3 className=\"bible-passage\" key={e.toString()}>\n                {e}\n              </h3>\n            ))}\n            <span className=\"bible-passage\">Bible</span>{\" \"}\n            <FontAwesomeIcon icon={faBookReader} color=\"white\" />{\" \"}\n            <span className=\"bible-passage\">Reading</span>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Header className=\"CardHeaderSmall\">\n        <Row className=\"text-center align-items-center align-content-center\">\n          <Col\n            xs={4}\n            sm={4}\n            className=\"text-center align-items-center align-content-center\"\n          >\n            <h6 className=\"bible-passage\">DEC</h6>\n            <h3 className=\"bible-passage\">{props.d}</h3>\n          </Col>\n          <Col\n            xs={8}\n            sm={8}\n            className=\"text-center align-items-center align-content-center\"\n          >\n            {props.v.split(\"&\").map((e) => (\n              <h5 className=\"bible-passage\" key={e.toString()}>\n                {e}\n              </h5>\n            ))}\n            <span className=\"bible-passage\">Bible</span>{\" \"}\n            <FontAwesomeIcon icon={faBookReader} color=\"white\" />{\" \"}\n            <span className=\"bible-passage\">Reading</span>\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body>\n        <Card.Text>\n          <span className=\"memory-verse-label\">Memory Verse</span>:{\" \"}\n          {modalShow ? \" \" : props.m}\n        </Card.Text>\n        <Card.Text className=\"text-center\">\n          <span className=\"border-heart\">\n            ︵‿︵‿୨ <span className=\"heart\">❦</span> ୧‿︵‿︵\n          </span>\n        </Card.Text>\n        <Accordion flush={true}>\n          {props.l.map((e) => (\n            <Accordion.Item key={e.i.toString()} eventKey={e.i}>\n              <Accordion.Header>\n                <span className=\"accordion-question\">{e.q}</span>\n              </Accordion.Header>\n              <Accordion.Body>{e.a}</Accordion.Body>\n            </Accordion.Item>\n          ))}\n        </Accordion>\n        <Card.Text className=\"text-center\">\n          <span className=\"border-heart\">\n            ︵‿︵‿୨ <span className=\"heart\">❦</span> ୧‿︵‿︵\n          </span>\n        </Card.Text>\n        <Card.Text>\n          <span className=\"memory-verse-label\">Prayer</span>: {props.p}\n        </Card.Text>\n        <Row className=\"justify-content-center pt-3\">\n          <Col xs=\"auto\">\n            <Button variant=\"golden\" onClick={() => setModalShow(true)}>\n              <span className=\"challenge-text\">Memory Verse Challenge</span>\n            </Button>\n          </Col>\n        </Row>\n        <CalendarItemModal\n          m={props.m}\n          c={props.c}\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CalendarItemCard;\n","import * as React from \"react\";\nimport \"./CalendarItemCard.scss\";\nimport { Card, Col, Row, Spinner } from \"react-bootstrap\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that renders a card with spinners.\n * This shows when the data is still being fetched and hasn't finished\n * loading\n * @returns {Card} The calendar details container\n * @component\n */\nconst CalendarItemCardPlaceHolder = (props: {\n  error: boolean;\n}): JSX.Element => (\n  <Card className=\"shadow-sm\">\n    <Card.Header className=\"CardHeaderBig\" />\n    <Card.Header className=\"CardHeaderSmall\" />\n    <Card.Body>\n      {props.error ? (\n        <>\n          <p className=\"text-center\">\n            Oops. Something's not right. Please check your internet connection\n            and try to refresh the browser.\n          </p>\n          <p className=\"text-center\">Thank you.</p>\n        </>\n      ) : (\n        <>\n          <Row>\n            <Col xs={4} />\n            <Col xs={4} className=\"text-center\">\n              <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />{\" \"}\n              <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />{\" \"}\n              <Spinner animation=\"grow\" variant=\"warning\" size=\"sm\" />{\" \"}\n            </Col>\n            <Col xs={4} />\n          </Row>\n          <p className=\"text-center\">Loading Bible Reading...</p>\n        </>\n      )}\n    </Card.Body>\n  </Card>\n);\n\nexport default CalendarItemCardPlaceHolder;\n","import * as React from \"react\";\nimport { Row } from \"react-bootstrap\";\nimport \"./CalendarHeader.css\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that renders the calendar title.\n * The display changes on small and extra-small devices. See {@link CalendarLayout}\n * @returns {Row} Container for the calendar title\n * @component\n */\nconst CalendarHeader = (): JSX.Element => (\n  <Row className=\"calendar-header-container\">\n    <h1 className=\"CalendarHeader align-items-center align-content-center\">\n      <span className=\"calendar-header-title\">ADVENT</span>{\" \"}\n      <span className=\"calendar-header-unicode\">❦</span>{\" \"}\n      <span className=\"calendar-header-title\">CALENDAR</span>\n    </h1>\n  </Row>\n);\n\nexport default CalendarHeader;\n","import * as React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSnowflake,\n  faHeart,\n  faBell,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faSkating,\n  faTree,\n  faCookieBite,\n  faSkiing,\n  faGifts,\n  faMitten,\n  faSleigh,\n  faGem,\n  faSnowman,\n  faHollyBerry,\n  faPlaneDeparture,\n  faCandyCane,\n  faGlassCheers,\n  faBirthdayCake,\n  faHeadphones,\n  faMugHot,\n  faChurch,\n  faMusic,\n  faHome,\n  faAnchor,\n  faSocks,\n  faStar,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"../../scss/whm_buttons.scss\";\nconst icons = [\n  faTree,\n  faBell,\n  faGifts,\n  faChurch,\n  faHeadphones,\n  faSkiing,\n  faMusic,\n  faGlassCheers,\n  faPlaneDeparture,\n  faGem,\n  faSleigh,\n  faSnowman,\n  faSnowflake,\n  faHollyBerry,\n  faSkating,\n  faMugHot,\n  faCandyCane,\n  faCookieBite,\n  faBirthdayCake,\n  faAnchor,\n  faHeart,\n  faHome,\n  faSocks,\n  faMitten,\n  faStar,\n];\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description the props interface of {@link CalendarButtonText}.\n * @interface\n */\ninterface ButtonTextProps {\n  /**\n   * The calendar day\n   */\n  text: string;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that renders the calendar\n * day text and a FontAwesome icon.\n * @param props {ButtonTextProps}\n * @returns {string} The calendar button text\n * @component\n */\nconst CalendarButtonText = (props: ButtonTextProps): JSX.Element => {\n  return (\n    <span className=\"btn-ornament-text\">\n      <FontAwesomeIcon icon={icons[parseInt(props.text, 10) - 1]} />{\" \"}\n      {props.text}\n    </span>\n  );\n};\n\nexport default CalendarButtonText;\n","import * as React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport CalendarButtonText from \"./CalendarButtonText\";\nimport \"../../scss/whm_buttons.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The props interface of {@link CalendarButton}.\n * @interface\n */\ninterface CalendarButtonProps {\n  /**\n   * The calendar button text and icon\n   */\n  text: string;\n  /**\n   * A function that handles the calendar day clicked by the user.\n   * Triggers a data fetch to display the calendar details of\n   * Bible readings, memory verse, and group discussion questions.\n   * See {@link AdventCalendar}\n   * @param num\n   */\n  handleNumberClick: (num: number) => void;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that returns the calendar days button.\n * The button text and icon is returned by {@link CalendarButtonText}.\n * @param props {CalendarButtonProps}\n * @returns {Button} The calendar button\n * @component\n */\nconst CalendarButton = (props: CalendarButtonProps): JSX.Element => {\n  const date = new Date();\n  return (\n    <Button\n      className=\"shadow-sm mb-3\"\n      //variant=\"ornament\"\n      variant={\n        date.getMonth() === 11 && date.getDate() >= parseInt(props.text, 10)\n          ? \"ornament-past\"\n          : \"ornament\"\n      }\n      onClick={() => props.handleNumberClick(parseInt(props.text, 10))}\n    >\n      <CalendarButtonText text={props.text} />\n    </Button>\n  );\n};\n\nexport default CalendarButton;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport CalendarButton from \"./CalendarButton\";\nimport { getTreeArray } from \"../../utils/getNumArray\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The props interface for the {@link CalendarPanel}.\n * @interface\n */\nexport interface CalendarPanelProps {\n  /**\n   * An array of rows that gets passed on to\n   * the function getTreeArray, which returns\n   * a multi-dimensional array used in rendering\n   * the calendar display depending on the screen\n   * size.\n   */\n  rows: number[];\n  /**\n   * A function that handles the calendar day that the user clicks\n   * which triggers a data fetch. See {@link AdventCalendar}.\n   * @param num {number} The calendar day that was clicked\n   * by the user.\n   */\n  handleNumberClick: (num: number) => void;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that displays a different\n * calendar layout depending on the device screen size -\n * a christmas tree for large devices, a christmas ornament\n * for medium devices, and a nutcracker for small devices.\n * Calendar days are basically buttons returned by {@link CalendarButton}.\n * @param props {CalendarPanelProps}\n * @returns {Row} The container for the calendar\n * @component\n *\n * @author Cynthia Escano\n */\nconst CalendarPanel = (props: CalendarPanelProps): JSX.Element => {\n  const [treeArray, setTreeArray] = useState<number[][]>([]);\n  /**\n   * A function that calls the getTreeArray function which returns\n   * a multi-dimensional array of rows and values used in rendering\n   * the calendar depending on the screen size. Gets triggered everytime\n   * the user clicks a different calendar day and changes the rows props.\n   */\n  useEffect(() => {\n    setTreeArray(getTreeArray(props.rows));\n  }, [props.rows]);\n  return (\n    <>\n      {treeArray.map((i) => (\n        <Row key={i[0].toString()} className=\"justify-content-center\">\n          {i.map((j) => (\n            <Col xs=\"auto\" key={j.toString()}>\n              <CalendarButton\n                key={j.toString()}\n                text={j.toString()}\n                handleNumberClick={props.handleNumberClick}\n              />\n            </Col>\n          ))}\n        </Row>\n      ))}\n    </>\n  );\n};\n\nexport default CalendarPanel;\n","import React, { useState } from \"react\";\nimport { Col, Row, Image, Modal, Button } from \"react-bootstrap\";\nimport screen_lg from \"../res/img/img_advent_lg.png\";\nimport screen_md from \"../res/img/img_advent_2.png\";\nimport screen_sm from \"../res/img/img_advent_3.png\";\nimport \"./ReactBlog.scss\";\n\nenum Size {\n  XL = \"xl\",\n  SM = \"sm\",\n  LG = \"lg\",\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A React component that renders an Blog page.\n * @component\n * @returns {Row} The Blog page container\n * @category Pages\n */\nconst ReactBlog = (): JSX.Element => {\n  const [showModal, setShowModal] = useState(false);\n  const [size, setSize] = useState<Size | undefined>();\n  const [img, setImg] = useState(\"\");\n\n  const handleShow = () => {\n    setShowModal(true);\n  };\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Row className=\"px-md-3 px-lg-5\">\n      <h3 className=\"text-center p-3\">Creating A React JS App</h3>\n      <Row>\n        <Col sm={0} md={2} />\n        <Col md={8} className=\"blog\">\n          <p>\n            This month I went back to studying React JS and TypeScript and Jest.\n            I learn best by doing, so I decided I'd come up with a simple app to\n            test my newly-acquired skills. Christmas is just around the corner,\n            so I thought, why not create an Advent Calendar of Bible Readings\n            for me and my teens? It would be a fun project for me, and hopefully\n            would enable me and my family to spend a few minutes together each\n            day during their winter break.\n          </p>\n          <p className=\"fw-bold\">The Project: Advent Calendar</p>\n          <p>\n            The Advent Calendar features a suggested Bible reading per day, from\n            December 1st to December 25th. It shows a memory verse, a few\n            questions relevant to the reading for a small group discussion, and\n            a prayer. There's also a memory verse challenge to aid in memorizing\n            the Bible verse.\n          </p>\n          <p className=\"fw-bold\">The Workflow</p>\n          <p>\n            I initially designed the Advent Calendar to be browser-based, but I\n            am thinking of also creating a mobile app eventually. I decided to\n            host the data on GitHub. The data is a JSON document which contains\n            the readings, discussion questions, and prayer for the day, as well\n            as an outline of Bible readings. There is a separate document for\n            each calendar day. Basically, JavasScript Fetch API is used to fetch\n            the data from GitHub using React's useEffect hook. The fetching is\n            triggered everytime a user selects a day from the calendar.\n            Initially, on load of the page, the reading that corresponds to the\n            current day shows on screen.\n          </p>\n          <p className=\"fw-bold\">Relevant Technologies</p>\n          <p className=\"fw-bold\">React JS & TypeScript</p>\n          <p>\n            I decided to use React JS for this project because it is open\n            source, and there is an extensive open source libraries that I can\n            use with it. The code is easier to maintain as parts of the page can\n            be divided into modular components. I am relatively new to\n            TypeScript, but I am glad that WebStorm, the IDE that I am using,\n            supports ReactJS-TypeScript out of the box. I wanted to familiarize\n            myself with TypeScript and start building apps with it as software\n            development seem to be heading in this direction.\n          </p>\n          <p className=\"fw-bold\">React Router</p>\n          <p>\n            Navigating between screens was handled by the React Router. As I am\n            thinking of deploying this on GitHub Pages, in my code I used the\n            HashRouter instead of the BrowserRouter.\n          </p>\n          <p className=\"fw-bold\">React Bootstrap</p>\n          <p>\n            For the layout, what I decided to use is react-bootstrap. I'm not\n            much into web design, but I do find react-bootstrap really helpful\n            and very easy to use with page layouts. One thing to consider when\n            creating web pages would be how each page would render given\n            different screen sizes of various devices, both mobile and desktops.\n            I'm glad this is easy to check using Chrome Developer Tools.\n          </p>\n          <p>Here are some screenshots of what I have accomplished -</p>\n          <Row className=\"pt-2 pb-2\">\n            <Col xs={0} sm={1} />\n            <Col xs={6} sm={6}>\n              <Image\n                src={screen_lg}\n                width=\"100%\"\n                thumbnail\n                onClick={() => {\n                  setSize(Size.XL);\n                  setImg(screen_lg);\n                  handleShow();\n                }}\n              />\n            </Col>\n            <Col xs={3} sm={2}>\n              <Image\n                src={screen_md}\n                width=\"100%\"\n                thumbnail\n                onClick={() => {\n                  setSize(Size.SM);\n                  setImg(screen_md);\n                  handleShow();\n                }}\n              />\n            </Col>\n            <Col xs={3} sm={2}>\n              <Image\n                src={screen_sm}\n                width=\"100%\"\n                thumbnail\n                onClick={() => {\n                  setSize(Size.SM);\n                  setImg(screen_sm);\n                  handleShow();\n                }}\n              />\n            </Col>\n            <Col xs={0} sm={1} />\n          </Row>\n          <p>\n            Some components that I used in the app include the Button,\n            OffCanvas, Card, Accordion, and Table.\n          </p>\n          <p className=\"fw-bold\">JavaScript</p>\n          <p>\n            I would like the calendar buttons to render a different layout on\n            large, small, and extra-small devices so I created a JavaScript\n            function that accepts an array of row numbers that would return\n            various layouts - so for users of large devices, they will see a\n            christmas tree, for smaller devices, a tree ornament, and for\n            extra-small devices, a nutcracker.\n          </p>\n          <p>Here is the Javascript code that accomplishes this -</p>\n          <Row className=\"mx-2 my-2\">\n            <Col className=\"code-block\">\n              <pre>\n                {`function getTreeArray(rows: number[]): number[][] {\n              const tree: number[][] = [];\n              function getCols(): number[] {\n              const j: number[] = [];\n              for (let i = 25; i > 0; i--) {\n              j.push(i);\n            }\n              return j;\n            }\n              let k = 0;\n              rows.map((e) => {\n              const j = [];\n              for (let i = 0; i <= e - 1; i++) {\n              j.push(getCols()[k]);\n              k += 1;\n            }\n              return tree.push(j);\n            });\n              return tree;\n            }`}\n              </pre>\n            </Col>\n          </Row>\n          <p>\n            The Advent Calendar shows on screen the numbers 1-25, representing\n            the number of days from December 1 to Christmas Day. My Javascript\n            accepts a number array representing the number of buttons or\n            calendar days per row and returns a 2-dimensional array of numbers\n            in the format: [[calendar days on row 1],[calendar days on row 2],\n            etc.]. My React functional component then processes this to render\n            the buttons per row.\n          </p>\n          <p className=\"fw-bold\">Font Awesome</p>\n          <p>\n            To add a bit of design, I used Font Awesome mainly in my calendar\n            icons.\n          </p>\n          <p>\n            So that's it, basically. A lot of effort also went into this project\n            in terms of organizing the components and the pages, making the code\n            more modular and hopefully, easier to maintain.\n          </p>\n          <p>\n            There's still a lot that I would like to explore in React JS but for\n            now, I just want to enjoy my app with my family. And hopefully it\n            would be a blessing to others as well.\n          </p>\n        </Col>\n        <Col sm={0} md={2} />\n      </Row>\n      <Modal show={showModal} onHide={handleClose} size={size}>\n        <Modal.Header closeButton>\n          <Modal.Title>Screenshot</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Image src={img} thumbnail width=\"100%\" />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Row>\n  );\n};\n\nexport default ReactBlog;\n","export function getTreeArray(rows: number[]): number[][] {\n  const tree: number[][] = [];\n  function getCols(): number[] {\n    const j: number[] = [];\n    for (let i = 25; i > 0; i--) {\n      j.push(i);\n    }\n    return j;\n  }\n  let k = 0;\n  rows.map((e) => {\n    const j = [];\n    for (let i = 0; i <= e - 1; i++) {\n      j.push(getCols()[k]);\n      k += 1;\n    }\n    return tree.push(j);\n  });\n  return tree;\n}\n","import React from \"react\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGripLines } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./CalendarHeaderButton.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The props interface for the {@link CalendarHeaderButton}.\n * @interface\n */\ninterface CalendarHeaderButtonProps {\n  /**\n   * Flag for displaying the calendar\n   */\n  openCalendar: boolean;\n  /**\n   * A function that handles displaying or collapsing\n   * the calendar.\n   * @param open {boolean} Flag for displaying the calendar\n   */\n  handleOpenCalendar: (open: boolean) => void;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that returns a button which toggles the\n * calendar display on small devices.\n * @param props {CalendarHeaderButtonProps}\n * @returns {(Row|Button)} The calendar header button\n * @component\n */\nconst CalendarHeaderButton = (props: CalendarHeaderButtonProps) => (\n  <Row className=\"justify-content-end calendar-header-button\">\n    <Col xs=\"auto\">\n      <Button\n        onClick={() => props.handleOpenCalendar(props.openCalendar)}\n        aria-controls=\"collapse-calendar\"\n        aria-expanded={props.openCalendar}\n        variant=\"transparent\"\n      >\n        <FontAwesomeIcon icon={faGripLines} />\n      </Button>\n    </Col>\n  </Row>\n);\n\nexport default CalendarHeaderButton;\n","import React from \"react\";\nimport { Col, Collapse, Row } from \"react-bootstrap\";\nimport CalendarPanel from \"./CalendarPanel\";\nimport \"./CalendarPanel.css\";\nimport CalendarHeaderButton from \"./CalendarHeaderButton\";\nimport \"./CalendarLayout.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The interface for {@link CalendarLayout} props.\n * @interface\n */\ninterface CalendarLayoutProps {\n  /**\n   * Used in rendering the appropriate layout depending on the\n   * screen size.\n   */\n  classname: string;\n  /**\n   * Gets passed on to the {@link CalendarPanel} for\n   * proper rendering of the calendar days.\n   */\n  rows: number[];\n  /**\n   * Toggles the calendar display. Used when the device is small.\n   */\n  openCalendar: boolean;\n  /**\n   * @description Function that handles displaying or collapsing\n   * the calendar.\n   * @param open {boolean} Flag for displaying or collapsing the calendar.\n   */\n  handleOpenCalendar: (open: boolean) => void;\n  /**\n   * @description Function that handles the setting of the\n   * calendar day that was clicked, which triggers a data fetch.\n   * See {@link AdventCalendar}\n   * @param num {number} The calendar day that was clicked by the user.\n   */\n  handleNumberClick: (num: number) => void;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description The container for the advent calendar days.\n * The calendar is expanded on large devices but collapsed\n * on smaller devices as handled by the {@link CalendarHeaderButton}.\n * {@link CalendarPanel} takes care of rendering the calendar rows.\n * @param props {CalendarLayoutProps}\n * @returns {(Row|Col)} The calendar container\n * @component\n */\nconst CalendarLayout = (props: CalendarLayoutProps): JSX.Element => {\n  switch (props.classname) {\n    case \"CalendarBig\":\n      return (\n        <Row>\n          <Col className={props.classname}>\n            <CalendarPanel\n              rows={props.rows}\n              handleNumberClick={props.handleNumberClick}\n            />\n            <Row className=\"p-3\">\n              <Col className=\"align-items-center align-content-center\">\n                <p className=\"border-star text-center\">\n                  ☆.。.:*・°☆.。.:*・°☆.。.:*・°☆.。.:*・°☆\n                </p>\n                <p className=\"text-center blessed-christmas-big\">\n                  Joyful & Blessed Christmas!\n                </p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      );\n    case \"CalendarSmall\":\n    case \"CalendarXS\":\n      return (\n        <Col className={props.classname}>\n          <CalendarHeaderButton\n            openCalendar={props.openCalendar}\n            handleOpenCalendar={props.handleOpenCalendar}\n          />\n          <Row>\n            <Collapse in={props.openCalendar}>\n              <div id=\"collapse-calendar\">\n                <CalendarPanel\n                  rows={props.rows}\n                  handleNumberClick={props.handleNumberClick}\n                />\n                <Row className=\"px-1\">\n                  <p className=\"text-center blessed-christmas\">\n                    Joyful & Blessed Christmas!\n                  </p>\n                </Row>\n              </div>\n            </Collapse>\n          </Row>\n        </Col>\n      );\n    default:\n      return <Row />;\n  }\n};\n\nexport default CalendarLayout;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col, Collapse } from \"react-bootstrap\";\nimport { GITHUB_URL } from \"../constants/Constants\";\nimport CalendarItemCard from \"../components/calendarItem/CalendarItemCard\";\nimport CalendarItemCardPlaceHolder from \"../components/calendarItem/CalendarItemCardPlaceholder\";\nimport CalendarHeader from \"../components/calendar/CalendarHeader\";\nimport CalendarLayout from \"../components/calendar/CalendarLayout\";\nimport { AdventData } from \"../interfaces/Interfaces\";\nimport \"./AdventCalendar.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description Fetches the JSON document of Bible reading and memory verse\n * per calendar day selected by the user. Extracts the data which gets\n * passed on to {@link CalendarLayout} and {@link CalendarItemCard} for\n * calendar and Bible reading rendering. Typecasts the JSON data into\n * a {@link AdventData}.\n * @returns {Container} The container for the Advent Calendar page, which\n * has the Advent Calendar and Calendar Card details.\n * @component\n * @category Pages\n */\nconst AdventCalendar = (): JSX.Element => {\n  /**\n   * @description The current date\n   * @constant\n   */\n  const date = new Date();\n  /**\n   * @description The selected calendar day. It is given the initial value of the current day in December.\n   * @function\n   */\n  const [item, setItem] = useState(date.getMonth() === 11 ? date.getDate() : 1);\n  /**\n   * @description The calendar details which comprises the Bible reading, the memory verse, and\n   * group discussion questions per selected calendar day.\n   * @function\n   */\n  const [calendarItem, setCalendarItem] = useState<AdventData>({\n    d: 1,\n    v: \"\",\n    m: \"\",\n    c: [],\n    l: [],\n    p: \"\",\n  });\n  /**\n   * @description A toggle for opening and closing the calendar.\n   * @function\n   */\n  const [openCalendar, setOpenCalendar] = useState(false);\n  /**\n   * @description Flag for scrolling the page back to the calendar header title.\n   * @function\n   */\n  const calendarItemRef = useRef<HTMLDivElement>(null);\n\n  /**\n   * Whether the Fetch got an error response.\n   */\n  const [hasError, setHasError] = useState(false);\n\n  /**\n   * @description Calls the function fetchData on initial render and everytime\n   * the item changes. On return, sets the calendarItem to back to its\n   * original state.\n   */\n  useEffect(() => {\n    fetchData(item);\n    return () => {\n      setCalendarItem({\n        d: 1,\n        v: \"\",\n        m: \"\",\n        c: [],\n        l: [],\n        p: \"\",\n      });\n      setHasError(false);\n    };\n  }, [item]);\n  /**\n   * @description A function that fetches the json data\n   * and sets the calendarItem.\n   * @param itemNum {number} The calendar day\n   */\n  const fetchData = (itemNum: number) => {\n    const urlString = GITHUB_URL + \"adventbible_\" + itemNum + \".json\";\n    fetch(urlString)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else if (response.status === 404) {\n          return Promise.reject(\"Error 404\");\n        } else {\n          return Promise.reject(\"Error: \" + response.status);\n        }\n      })\n      .then((data) => {\n        setCalendarItem(data[Object.keys(data)[0]]);\n      })\n      .catch((err) => {\n        console.error(\"An error occurred: \" + err);\n        setHasError(true);\n      });\n  };\n  /**\n   * @description A function that opens the calendar\n   */\n  const handleOpenCalendar = () => {\n    setOpenCalendar(!openCalendar);\n  };\n  /**\n   * @description Handles the calendar day button clicks and updates\n   * the item state.\n   * @param num {number} The calendar day\n   */\n  const handleNumberClick = (num: number) => {\n    setItem(num);\n    setOpenCalendar(false);\n    if (calendarItemRef && calendarItemRef.current) {\n      calendarItemRef.current.scrollIntoView(true);\n    }\n  };\n  return (\n    <Container>\n      <div ref={calendarItemRef} />\n      <Row className=\"mt-3 mb-3 justify-content-center\">\n        <CalendarHeader />\n        <Row className=\"align-items-center\">\n          <Col md={12} lg={6}>\n            <Row>\n              <CalendarLayout\n                classname=\"CalendarBig\"\n                rows={[1, 2, 3, 4, 5, 6, 1, 3]}\n                openCalendar={openCalendar}\n                handleOpenCalendar={handleOpenCalendar}\n                handleNumberClick={handleNumberClick}\n              />\n              <CalendarLayout\n                classname=\"CalendarSmall\"\n                rows={[1, 2, 3, 4, 4, 4, 4, 2, 1]}\n                openCalendar={openCalendar}\n                handleOpenCalendar={handleOpenCalendar}\n                handleNumberClick={handleNumberClick}\n              />\n              <CalendarLayout\n                classname=\"CalendarXS\"\n                rows={[1, 2, 2, 3, 3, 3, 3, 3, 1, 1, 3]}\n                openCalendar={openCalendar}\n                handleOpenCalendar={handleOpenCalendar}\n                handleNumberClick={handleNumberClick}\n              />\n            </Row>\n          </Col>\n          {calendarItem.v ? (\n            <Collapse in={true}>\n              <Col md={12} lg={6}>\n                <CalendarItemCard\n                  id=\"card-id\"\n                  d={item}\n                  v={calendarItem.v}\n                  m={calendarItem.m}\n                  c={calendarItem.c}\n                  l={calendarItem.l}\n                  p={calendarItem.p}\n                />\n              </Col>\n            </Collapse>\n          ) : (\n            <Col md={12} lg={6}>\n              <CalendarItemCardPlaceHolder error={hasError} />\n            </Col>\n          )}\n        </Row>\n        <Row className=\"pb-3 pt-3\">\n          <span className=\"border-star text-center\">\n            ☆.。.:*・°☆.。.:*・°☆.。.:*・°☆.。.:*・°☆\n          </span>\n        </Row>\n        <Row>\n          <p className=\"text-center font-monospace mb-0 pt-1\">\n            Oh sing to the Lord a new song; sing to the Lord, all the earth!\n            Sing to the Lord, bless his name; tell of his salvation from day to\n            day.\n          </p>\n          <p className=\"text-center font-monospace mt-0\">\n            - Psalm 96:1-2 (ESV)\n          </p>\n        </Row>\n        <Row className=\"pb-3\">\n          <span className=\"border-star text-center\">\n            ☆.。.:*・°☆.。.:*・°☆.。.:*・°☆.。.:*・°☆\n          </span>\n        </Row>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AdventCalendar;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport CalendarHeader from \"../components/calendar/CalendarHeader\";\nimport \"./About.scss\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A React component that renders an About page.\n * @component\n * @returns {@link Row} The About page container\n * @category Pages\n */\nconst About = (): JSX.Element => {\n  return (\n    <>\n      <CalendarHeader />\n      <Row>\n        <Col sm={0} md={2} />\n        <Col md={8} className=\"about\">\n          <p>\n            First week of November was when I started thinking about Christmas\n            and how we'd celebrate as a family this year. Decorating the house,\n            buying Christmas presents, and planning our special meals can easily\n            fill up my to-do list, but what I am actually hoping for is to be\n            able to celebrate it with my family, especially my teens, for more\n            than just a single day. More than this, I am hoping that we can all\n            celebrate Christmas with our hearts prepared to receive the reason\n            for this special occasion - Jesus Christ.\n          </p>\n          <p>\n            Hence, I decided to come up with an Advent Calendar of Bible\n            Readings. Since these days I am learning web and mobile\n            technologies, I thought of creating a simple app that we can use for\n            this purpose. More than our own family, I am hoping that I can also\n            share it with the rest of our family back home, especially my Mom.\n            And maybe there are other people who might also find it useful.\n          </p>\n          <p>\n            The Advent Calendar features a suggested Bible reading per day, from\n            December 1st to December 25th. It shows a memory verse, and some\n            questions relevant to the reading for a small group discussion.\n            There's also a prayer and a memory verse challenge. For those who\n            might want to follow along, you can find the outline of Bible\n            readings <Link to=\"/outline\">here</Link>.\n          </p>\n          <p>Thank you and I wish you all a Blessed Christmas Season!</p>\n        </Col>\n        <Col sm={0} md={2} />\n      </Row>\n    </>\n  );\n};\n\nexport default About;\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Table } from \"react-bootstrap\";\nimport { GITHUB_URL } from \"../constants/Constants\";\nimport CalendarHeader from \"../components/calendar/CalendarHeader\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description Represents the outline of Bible readings data\n * @interface\n */\ninterface Dic {\n  [key: string]: Content;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description Represents the outline of Bible readings data\n * @interface\n */\ninterface Content {\n  /**\n   * The days organized by topic\n   */\n  t: string;\n\n  /**\n   * The summary\n   */\n  s: string;\n\n  /**\n   * The Bible reading\n   */\n  r: Reading[];\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description Represents the outline of Bible readings data\n * @interface\n */\ninterface Reading {\n  /**\n   * The day\n   */\n  d: string;\n\n  /**\n   * The Bible passage\n   */\n  b: string;\n}\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A React component that renders an Outline page.\n * @component\n * @returns {Row} The Outline page container\n * @category Pages\n */\nconst Outline = (): JSX.Element => {\n  const [outline, setOutline] = useState<Dic>({});\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    const urlString = GITHUB_URL + \"adventbible_outline.json\";\n    fetch(urlString)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else if (response.status === 404) {\n          return Promise.reject(\"error 404\");\n        } else {\n          return Promise.reject(\"some other error: \" + response.status);\n        }\n      })\n      .then((data) => {\n        setOutline(data);\n      })\n      .catch((err) => console.error(\"error is: \" + err));\n  };\n  return (\n    <>\n      <CalendarHeader />\n      <h4 className=\"text-center p-3\">Outline of Bible Readings</h4>\n      <Row className=\"px-5\">\n        <Col sm={0} md={2} />\n        <Col md={8}>\n          {Object.keys(outline).map((e) => {\n            return (\n              <Row key={e}>\n                <p>\n                  <span className=\"fw-bold\">{outline[e].t}</span> {outline[e].s}\n                </p>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>Day</th>\n                      <th>Bible Reading</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {outline[e].r.map((j) => {\n                      return (\n                        <tr key={j.b}>\n                          <td>{j.d}</td>\n                          <td>{j.b}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </Row>\n            );\n          })}\n        </Col>\n        <Col sm={0} md={2} />\n      </Row>\n    </>\n  );\n};\n\nexport default Outline;\n","export default __webpack_public_path__ + \"static/media/img_advent_lg.875715f2.png\";","export default __webpack_public_path__ + \"static/media/img_advent_2.6ba9bc48.png\";","export default __webpack_public_path__ + \"static/media/img_advent_3.eb9a6dd5.png\";","import React from \"react\";\nimport { Accordion, Col, ListGroup, Row } from \"react-bootstrap\";\nimport CalendarHeader from \"./components/calendar/CalendarHeader\";\n\ninterface LicenseProps {\n  licenses: string;\n  repository: string;\n  licenseUrl: string;\n  parents: string;\n}\n\nconst Licenses = () => {\n  const licenses: {\n    [id: string]: LicenseProps;\n  } = require(\"./licenses.json\");\n  const ver = /\\d+(\\.\\d+)*/;\n  const at = /(?:@)/gi;\n  return (\n    <>\n      <CalendarHeader />\n      <h4 className=\"text-center p-3\">Copyright Notice</h4>\n      <Row>\n        <Col lg={2} />\n        <Col lg={8}>\n          <p>Copyright 2021 Cynthia Escano</p>\n\n          <p>\n            Licensed under the Apache License, Version 2.0 (the \"License\"); you\n            may not use this file except in compliance with the License. You may\n            obtain a copy of the License at\n          </p>\n\n          <p>\n            <a\n              href=\"http://www.apache.org/licenses/LICENSE-2.0\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              http://www.apache.org/licenses/LICENSE-2.0\n            </a>\n          </p>\n\n          <p>\n            Unless required by applicable law or agreed to in writing, software\n            distributed under the License is distributed on an \"AS IS\" BASIS,\n            WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n            implied. See the License for the specific language governing\n            permissions and limitations under the License.\n          </p>\n          <h6>Scripture Quotations</h6>\n          <p>\n            “Scripture quotations are from The ESV® Bible (The Holy Bible,\n            English Standard Version®), copyright © 2001 by Crossway, a\n            publishing ministry of Good News Publishers. Used by permission. All\n            rights reserved.”\n          </p>\n        </Col>\n        <Col lg={2} />\n      </Row>\n      <Row>\n        <Col lg={2} />\n        <Col lg={8}>\n          <h6>Thank you to open source projects!</h6>\n          <Accordion className=\"pt-2\">\n            {Object.keys(licenses).map((e: string) => {\n              const version = e.match(ver);\n              const library = e\n                .replace(at, \"\")\n                .replace(version ? version[0] : \"\", \"\");\n              return (\n                <Accordion.Item key={e.toString()} eventKey={e}>\n                  <Accordion.Header>{library}</Accordion.Header>\n                  <Accordion.Body>\n                    <ListGroup>\n                      <ListGroup.Item>Version: {version}</ListGroup.Item>\n                      <ListGroup.Item>\n                        License: {licenses[e].licenses}\n                      </ListGroup.Item>\n                      <ListGroup.Item\n                        action\n                        href={licenses[e].repository}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Repository\n                      </ListGroup.Item>\n                      <ListGroup.Item\n                        action\n                        href={licenses[e].licenseUrl}\n                        target=\"_blank\"\n                      >\n                        License URL\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Accordion.Body>\n                </Accordion.Item>\n              );\n            })}\n          </Accordion>\n        </Col>\n        <Col lg={2} />\n      </Row>\n    </>\n  );\n};\n\nexport default Licenses;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AdventCalendar from \"../../pages/AdventCalendar\";\nimport About from \"../../pages/About\";\nimport Outline from \"../../pages/Outline\";\nimport ReactBlog from \"../../pages/ReactBlog\";\nimport Licenses from \"../../Licenses\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A component that defines the navigation route paths\n * using the react-router-dom library.\n * @returns {(Switch|Route)} The route paths\n * @component\n */\nconst NavRouter = () => (\n  <Switch>\n    <Route exact path=\"/\">\n      <AdventCalendar />\n    </Route>\n    <Route path=\"/about\">\n      <About />\n    </Route>\n    <Route path=\"/outline\">\n      <Outline />\n    </Route>\n    <Route path=\"/react\">\n      <ReactBlog />\n    </Route>\n    <Route path=\"/licenses\">\n      <Licenses />\n    </Route>\n  </Switch>\n);\n\nexport default NavRouter;\n","import React, { useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"./components/header/Header\";\nimport Menu from \"./components/menu/Menu\";\nimport NavRouter from \"./components/navigation/NavRouter\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n * @description A React component that renders the page {@link Header}\n * and the navigation {@link Menu} page. Page navigations are handled\n * by the {@link NavRouter}.\n * @component\n * @returns {(Header|Menu)} {@link Header} & {@link Menu} Container\n */\nconst App = (): JSX.Element => {\n  const d = new Date();\n  const currentYear = d.getFullYear();\n  /**\n   * Toggle for showing the Offcanvas menu\n   */\n  const [showMenu, setShowMenu] = useState(false);\n  /**\n   * Shows the menu items\n   */\n  const handleShowMenu = () => {\n    setShowMenu(true);\n  };\n  /**\n   * Hides the menu items\n   */\n  const handleHideMenu = () => {\n    setShowMenu(false);\n  };\n  return (\n    <Container fluid>\n      <Header handleShowMenu={handleShowMenu} />\n      <Menu showMenu={showMenu} handleHideMenu={handleHideMenu} />\n      <NavRouter />\n      <footer>\n        {\" \"}\n        <small>\n          &copy; Copyright {currentYear} Cynthia Escano |{\" \"}\n          <Link to=\"/licenses\">Copyright Notice</Link>\n        </small>{\" \"}\n      </footer>\n    </Container>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n/**\n * @license Apache-2.0. See license page.\n * @copyright Cynthia Escano 2021\n */\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}